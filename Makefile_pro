# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    Makefile_pro                                       :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: anamedin <anamedin@student.42barcel>       +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2025/07/19 12:38:36 by anamedin          #+#    #+#              #
#    Updated: 2025/07/19 12:39:42 by anamedin         ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

# Nombre del ejecutable final
NAME = phonebook

# Carpeta donde se guardarán los archivos .o (objetos)
OBJ_DIR = objs/

# Carpeta donde se guardarán las dependencias .d
DEP_DIR = deps/

# Compilador que vamos a usar
CC = g++

# Flags del compilador:
# -Wall: muestra todas las advertencias
# -Wextra: muestra advertencias adicionales
# -Werror: trata advertencias como errores
# -std=c++98: usa el estándar C++98 (como pide 42)
CFLAGS = -Wall -Wextra -Werror -std=c++98

# Flags para compilar archivos .cpp en .o con dependencias:
# -MMD: genera automáticamente un archivo .d (dependencias)
# -g: añade información para depurar (debug)
# -c: compila sin hacer el link final
OBJ_FLAGS = $(CFLAGS) -MMD -g -c

# Lista de archivos fuente (.cpp)
SRC = main.cpp \
	Contact.cpp \
	PhoneBook.cpp \
	Print.cpp

# Lista de archivos objeto (.o) correspondiente a los .cpp
OBJ = $(SRC:.cpp=.o)

# Lista de archivos de dependencias (.d) correspondiente a los .cpp
DEP = $(SRC:.cpp=.d)

# Archivos objeto con la carpeta prefijada (objs/)
OBJS = $(addprefix $(OBJ_DIR), $(OBJ))

# Archivos de dependencias con la carpeta prefijada (deps/)
DEPS = $(addprefix $(DEP_DIR), $(DEP))

# Reglas que no son archivos, sino comandos que ejecutamos
.PHONY: all clean fclean re

# Regla por defecto: cuando haces "make" se compila el programa
all: $(NAME)

# Cómo se genera el ejecutable final "phonebook"
$(NAME): Makefile $(OBJS)
	$(CC) $(CFLAGS) $(OBJS) -o $@

# Cómo se compilan los .cpp en .o (y se crean carpetas si no existen)
# También mueve el archivo .d a la carpeta deps/
$(OBJ_DIR)%.o: %.cpp
	@mkdir -p $(OBJ_DIR) $(DEP_DIR)
	$(CC) $(OBJ_FLAGS) $< -o $@
	@mv $(@:.o=.d) $(DEP_DIR)

# Limpia los archivos generados (.o y .d) y sus carpetas
clean:
	rm -rf $(OBJ_DIR) $(DEP_DIR)

# Limpia todo, incluyendo el ejecutable
fclean: clean
	rm -f $(NAME)

# Borra todo y vuelve a compilar desde cero
re: fclean all

# Incluir automáticamente los archivos de dependencias .d generados
# Esto permite que si cambias un .hpp, se recompilen solo los .cpp que lo usan
-include $(DEPS)

